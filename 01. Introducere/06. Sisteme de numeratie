  Sisteme de numeratie:
- zeciaml (in baza 10): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
- binar (in baza 2): 0, 1
- octal (in baza 10): 0, 1, 2, 3, 4, 5, 6, 7
- hexazecimal (in baza 16): 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A(10), B(11), C(12), D(13), E(14), F(15)
ex: 15(10) = 1111(2) = F(16)


  Conversia unui numar natural din baza 10 in baza p
ex: 35(10) = 100011(2)
    35 : 2 = 17 (r1)
    17 : 2 = 8 (r1)
    8 : 2 = 4 (r0)
    4 : 2 = 2 (r0)
    2 : 2 = 1 (r0)
    1 : 2 = 0 (r1)
    
    Algoritm:
    void base10ToP(int x, int p) {
      char str[NMAX];
      int dim = 0;

      // conversia numarului din baza 10 in baza p
      while (x) {
          if (x % p <= 9)
              str[dim ++] = x % p + '0';
          else
              str[dim ++] = (x % p - 10 + '0') + ('A' - '0');
          x /= p;
      }

      // afisarea numarului in baza p
      for (int i = dim - 1; i >= 0; -- i)
          cout << str[i];
      cout << "\n";
  }


  Conversia unui numar natural din baza p in baza 10
ex: 1011010(2) = 90(10)
    0 * 2 ^ 0 + 1 * 2 ^ 1 + 0 * 2 ^ 2 + 1 * 2 ^ 3 + 1 * 2 ^ 4 + 0 * 2 ^ 5 + 1 * 2 ^ 6 = 2 + 8 + 16 + 64 = 90
    
    Algoritm:
    void basePTo10(char str[NMAX], int p) {
      int ans = 0, lg = strlen(str), pw = 1;
      for (int i = lg - 1; i >= 0; -- i, pw *= p)
          if (str[i] - '0' <= 9)
              ans += (str[i] - '0') * pw;
          else
              ans += (str[i] - 'A' + 10) * pw;
      cout << ans << "\n";
    }
  
  
  Conversia unui numar natural din baza p1 in baza p2
  x(p1) -> y(10) -> z(p2)
ex: 153(6) = 69(10) = 2120(3)
